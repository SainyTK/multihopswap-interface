/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { OracleTest } from "../OracleTest";

export class OracleTest__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<OracleTest> {
    return super.deploy(overrides || {}) as Promise<OracleTest>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): OracleTest {
    return super.attach(address) as OracleTest;
  }
  connect(signer: Signer): OracleTest__factory {
    return super.connect(signer) as OracleTest__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OracleTest {
    return new Contract(address, _abi, signerOrProvider) as OracleTest;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "period",
        type: "uint32",
      },
    ],
    name: "consult",
    outputs: [
      {
        internalType: "int24",
        name: "timeWeightedAverageTick",
        type: "int24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "period",
        type: "uint32",
      },
    ],
    name: "getGasCostOfConsult",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int24",
        name: "tick",
        type: "int24",
      },
      {
        internalType: "uint128",
        name: "baseAmount",
        type: "uint128",
      },
      {
        internalType: "address",
        name: "baseToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "quoteToken",
        type: "address",
      },
    ],
    name: "getGasCostOfGetQuoteAtTick",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
    ],
    name: "getOldestObservationSecondsAgo",
    outputs: [
      {
        internalType: "uint32",
        name: "secondsAgo",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "currentTimestamp",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int24",
        name: "tick",
        type: "int24",
      },
      {
        internalType: "uint128",
        name: "baseAmount",
        type: "uint128",
      },
      {
        internalType: "address",
        name: "baseToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "quoteToken",
        type: "address",
      },
    ],
    name: "getQuoteAtTick",
    outputs: [
      {
        internalType: "uint256",
        name: "quoteAmount",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610e78806100206000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c806382413489116100505780638241348914610136578063bbe8f4191461018c578063e6c4fbe0146101cb57610067565b806343c57a271461006c5780636a816ff9146100da575b600080fd5b6100c86004803603608081101561008257600080fd5b50803560020b906fffffffffffffffffffffffffffffffff6020820135169073ffffffffffffffffffffffffffffffffffffffff60408201358116916060013516610227565b60408051918252519081900360200190f35b6100c8600480360360808110156100f057600080fd5b50803560020b906fffffffffffffffffffffffffffffffff6020820135169073ffffffffffffffffffffffffffffffffffffffff6040820135811691606001351661023e565b6101756004803603604081101561014c57600080fd5b50803573ffffffffffffffffffffffffffffffffffffffff16906020013563ffffffff1661025d565b6040805160029290920b8252519081900360200190f35b6100c8600480360360408110156101a257600080fd5b50803573ffffffffffffffffffffffffffffffffffffffff16906020013563ffffffff16610270565b6101fe600480360360208110156101e157600080fd5b503573ffffffffffffffffffffffffffffffffffffffff1661028b565b604051808363ffffffff1681526020018263ffffffff1681526020019250505060405180910390f35b6000610235858585856102a0565b95945050505050565b6000805a9050610250868686866102a0565b505a900395945050505050565b60006102698383610449565b9392505050565b6000805a90506102808484610449565b505a90039392505050565b600080610297836107e0565b93429350915050565b6000806102ac86610a0b565b90506fffffffffffffffffffffffffffffffff73ffffffffffffffffffffffffffffffffffffffff82161161037a5773ffffffffffffffffffffffffffffffffffffffff8082168002908481169086161061033c576103377801000000000000000000000000000000000000000000000000876fffffffffffffffffffffffffffffffff1683610d9e565b610372565b61037281876fffffffffffffffffffffffffffffffff167801000000000000000000000000000000000000000000000000610d9e565b925050610440565b60006103a673ffffffffffffffffffffffffffffffffffffffff83168068010000000000000000610d9e565b90508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161061040e57610409700100000000000000000000000000000000876fffffffffffffffffffffffffffffffff1683610d9e565b61043c565b61043c81876fffffffffffffffffffffffffffffffff16700100000000000000000000000000000000610d9e565b9250505b50949350505050565b600063ffffffff82166104bd57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600260248201527f4250000000000000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b60408051600280825260608201835260009260208301908036833701905050905082816000815181106104ec57fe5b602002602001019063ffffffff16908163ffffffff168152505060008160018151811061051557fe5b63ffffffff9092166020928302919091018201526040517f883bdbfd0000000000000000000000000000000000000000000000000000000081526004810182815283516024830152835160009373ffffffffffffffffffffffffffffffffffffffff89169363883bdbfd938793909283926044019185820191028083838b5b838110156105ac578181015183820152602001610594565b505050509050019250505060006040518083038186803b1580156105cf57600080fd5b505afa1580156105e3573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604090815281101561062a57600080fd5b810190808051604051939291908464010000000082111561064a57600080fd5b90830190602082018581111561065f57600080fd5b825186602082028301116401000000008211171561067c57600080fd5b82525081516020918201928201910280838360005b838110156106a9578181015183820152602001610691565b50505050905001604052602001805160405193929190846401000000008211156106d257600080fd5b9083019060208201858111156106e757600080fd5b825186602082028301116401000000008211171561070457600080fd5b82525081516020918201928201910280838360005b83811015610731578181015183820152602001610719565b5050505090500160405250505050905060008160008151811061075057fe5b60200260200101518260018151811061076557fe5b60200260200101510390508463ffffffff168160060b8161078257fe5b05935060008160060b1280156107ac57508463ffffffff168160060b816107a557fe5b0760060b15155b156107d7577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff909301925b50505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff16633850c7bd6040518163ffffffff1660e01b815260040160e06040518083038186803b15801561082b57600080fd5b505afa15801561083f573d6000803e3d6000fd5b505050506040513d60e081101561085557600080fd5b506040810151606090910151909250905061ffff81166108d657604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600260248201527f4e49000000000000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b6000808573ffffffffffffffffffffffffffffffffffffffff1663252c09d78461ffff168660010161ffff168161090957fe5b066040518263ffffffff1660e01b8152600401808261ffff16815260200191505060806040518083038186803b15801561094257600080fd5b505afa158015610956573d6000803e3d6000fd5b505050506040513d608081101561096c57600080fd5b508051606090910151909250905080610a00578573ffffffffffffffffffffffffffffffffffffffff1663252c09d760006040518263ffffffff1660e01b81526004018082815260200191505060806040518083038186803b1580156109d157600080fd5b505afa1580156109e5573d6000803e3d6000fd5b505050506040513d60808110156109fb57600080fd5b505191505b504203949350505050565b60008060008360020b12610a22578260020b610a2a565b8260020b6000035b9050620d89e8811115610a9e57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600160248201527f5400000000000000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b600060018216610abf57700100000000000000000000000000000000610ad1565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff1690506002821615610b05576ffff97272373d413259a46990580e213a0260801c5b6004821615610b24576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b6008821615610b43576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b6010821615610b62576fffcb9843d60f6159c9db58835c9266440260801c5b6020821615610b81576fff973b41fa98c081472e6896dfb254c00260801c5b6040821615610ba0576fff2ea16466c96a3843ec78b326b528610260801c5b6080821615610bbf576ffe5dee046a99a2a811c461f1969c30530260801c5b610100821615610bdf576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b610200821615610bff576ff987a7253ac413176f2b074cf7815e540260801c5b610400821615610c1f576ff3392b0822b70005940c7a398e4b70f30260801c5b610800821615610c3f576fe7159475a2c29b7443b29c7fa6e889d90260801c5b611000821615610c5f576fd097f3bdfd2022b8845ad8f792aa58250260801c5b612000821615610c7f576fa9f746462d870fdf8a65dc1f90e061e50260801c5b614000821615610c9f576f70d869a156d2a1b890bb3df62baf32f70260801c5b618000821615610cbf576f31be135f97d08fd981231505542fcfa60260801c5b62010000821615610ce0576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b62020000821615610d00576e5d6af8dedb81196699c329225ee6040260801c5b62040000821615610d1f576d2216e584f5fa1ea926041bedfe980260801c5b62080000821615610d3c576b048a170391f7dc42444e8fa20260801c5b60008460020b1315610d7557807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81610d7157fe5b0490505b640100000000810615610d89576001610d8c565b60005b60ff16602082901c0192505050919050565b600080807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff85870986860292508281109083900303905080610df25760008411610de757600080fd5b508290049050610269565b808411610dfe57600080fd5b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a0290910302918190038190046001018684119095039490940291909403929092049190911791909102915050939250505056fea164736f6c6343000706000a";
